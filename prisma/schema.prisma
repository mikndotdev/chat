// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String           @id @default(cuid())
  chats       Chat[]
  providers   CustomProvider[]
  apiKeys     ApiKey[]
  files       File[]
  attachments Attachment[]
}

model Message {
  id          String       @id @default(cuid())
  content     String
  createdAt   DateTime     @default(now())
  userId      String
  Chat        Chat?        @relation(fields: [chatId], references: [id])
  chatId      String?
  public      Boolean      @default(false)
  loading     Boolean      @default(true)
  role        String       @default("user")
  attachments Attachment[]
}

model Chat {
  id          String       @id @default(cuid())
  createdAt   DateTime     @default(now())
  userId      String
  name        String?
  messages    Message[]
  model       String
  modelType   String       @default("provider")
  public      Boolean      @default(false)
  User        User         @relation(fields: [userId], references: [id])
  attachments Attachment[]
}

model CustomProvider {
  id                  String   @id @default(cuid())
  name                String?
  type                String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  userId              String
  endpoint            String?
  supportsAttachments Boolean  @default(false)
  User                User     @relation(fields: [userId], references: [id])
}

model Attachment {
  id        String   @id @default(cuid())
  userId    String
  url       String
  createdAt DateTime @default(now())
  chatId    String
  chat      Chat?    @relation(fields: [chatId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
  Message   Message? @relation(fields: [messageId], references: [id])
  messageId String?
}

model ApiKey {
  id         String  @id @default(cuid())
  providerId String
  key        String
  User       User?   @relation(fields: [userId], references: [id])
  userId     String?
}

model Stream {
  id       String @id @default(cuid())
  chatId   String @default("null")
  streamId String
}

model File {
  id        String   @id @default(cuid())
  userId    String
  url       String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}
